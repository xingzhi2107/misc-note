#+TITLE: Rust

* 重温容量计量单位
  基本的换算方式:
  - 1 bit :: 1位，即0或者1  
  - 1 byte :: 1 byte = 8 bit，byte翻译为字节，可能是因为最早1 byte表示一个字符，即ASICC码 + 扩展ASICC码
  - 1 kb :: 1024 bytes
  - 1 mb :: 1024 kb

  上面的换算还算简单，也很无趣。让我们通过一些问题来扩展下：
  - 那么在64位CPU芯片指的是什么？
  - 一个u32的int值，占用多少内存？u8的int值又占用多少？
  - 一个字符占用多少内存？一个字符的字符串占用多少内存？
  - 一个emoji占用多少内存？可能占用多少机械硬盘存储？可能占用多少固态硬盘存储？



* 实践：Todo list
  想通过实现一个命令行版的todo list程序，来尝试解决我心中的一个难题：

  假定有一个 ~Vec<Todo>~ 这样的数组，如何实现一个函数 ~edit(idx, new_title)~ 来修改数组里的某个todo的title？
  目前看到的版本都是一次性从文件读出所有todo，然后找到目标todo，生成一个新的todo，替换掉，然后写回文件。

  我暂时解决不了，也找不到例子。所以，决定就用上诉的方法也实现一遍todo list，就当练手。至于问题，或许可以到V站上
  请教：
  1. 如何实现？
  2. 如果按每次从文件读出，改完写回的方式。那rust的高性能优势又能有多少？
